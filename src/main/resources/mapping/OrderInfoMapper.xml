<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.mapper.OrderInfoMapper">
  <resultMap id="BaseResultMap" type="com.example.demo.entity.OrderInfo">
    <id column="order_id" jdbcType="INTEGER" property="orderId" />
    <result column="amount" jdbcType="INTEGER" property="amount" />
    <result column="delivery" jdbcType="VARCHAR" property="delivery" />
    <result column="goods_detail_id" jdbcType="INTEGER" property="goodsDetailId" />
    <result column="order_date" jdbcType="DATE" property="orderDate" />
    <result column="order_price" jdbcType="DECIMAL" property="orderPrice" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="lease_term" jdbcType="DATE" property="leaseTerm" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    order_id, amount, delivery, goods_detail_id, order_date, order_price, status, lease_term, 
    user_id
  </sql>
  <select id="selectByExample" parameterType="com.example.demo.entity.OrderInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from order_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from order_info
    where order_id = #{orderId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from order_info
    where order_id = #{orderId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.demo.entity.OrderInfoExample">
    delete from order_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.demo.entity.OrderInfo">
    insert into order_info (order_id, amount, delivery, 
      goods_detail_id, order_date, order_price, 
      status, lease_term, user_id
      )
    values (#{orderId,jdbcType=INTEGER}, #{amount,jdbcType=INTEGER}, #{delivery,jdbcType=VARCHAR}, 
      #{goodsDetailId,jdbcType=INTEGER}, #{orderDate,jdbcType=DATE}, #{orderPrice,jdbcType=DECIMAL}, 
      #{status,jdbcType=INTEGER}, #{leaseTerm,jdbcType=DATE}, #{userId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.entity.OrderInfo">
    insert into order_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        order_id,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="delivery != null">
        delivery,
      </if>
      <if test="goodsDetailId != null">
        goods_detail_id,
      </if>
      <if test="orderDate != null">
        order_date,
      </if>
      <if test="orderPrice != null">
        order_price,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="leaseTerm != null">
        lease_term,
      </if>
      <if test="userId != null">
        user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=INTEGER},
      </if>
      <if test="delivery != null">
        #{delivery,jdbcType=VARCHAR},
      </if>
      <if test="goodsDetailId != null">
        #{goodsDetailId,jdbcType=INTEGER},
      </if>
      <if test="orderDate != null">
        #{orderDate,jdbcType=DATE},
      </if>
      <if test="orderPrice != null">
        #{orderPrice,jdbcType=DECIMAL},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="leaseTerm != null">
        #{leaseTerm,jdbcType=DATE},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.demo.entity.OrderInfoExample" resultType="java.lang.Long">
    select count(*) from order_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update order_info
    <set>
      <if test="record.orderId != null">
        order_id = #{record.orderId,jdbcType=INTEGER},
      </if>
      <if test="record.amount != null">
        amount = #{record.amount,jdbcType=INTEGER},
      </if>
      <if test="record.delivery != null">
        delivery = #{record.delivery,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsDetailId != null">
        goods_detail_id = #{record.goodsDetailId,jdbcType=INTEGER},
      </if>
      <if test="record.orderDate != null">
        order_date = #{record.orderDate,jdbcType=DATE},
      </if>
      <if test="record.orderPrice != null">
        order_price = #{record.orderPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.leaseTerm != null">
        lease_term = #{record.leaseTerm,jdbcType=DATE},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update order_info
    set order_id = #{record.orderId,jdbcType=INTEGER},
      amount = #{record.amount,jdbcType=INTEGER},
      delivery = #{record.delivery,jdbcType=VARCHAR},
      goods_detail_id = #{record.goodsDetailId,jdbcType=INTEGER},
      order_date = #{record.orderDate,jdbcType=DATE},
      order_price = #{record.orderPrice,jdbcType=DECIMAL},
      status = #{record.status,jdbcType=INTEGER},
      lease_term = #{record.leaseTerm,jdbcType=DATE},
      user_id = #{record.userId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.entity.OrderInfo">
    update order_info
    <set>
      <if test="amount != null">
        amount = #{amount,jdbcType=INTEGER},
      </if>
      <if test="delivery != null">
        delivery = #{delivery,jdbcType=VARCHAR},
      </if>
      <if test="goodsDetailId != null">
        goods_detail_id = #{goodsDetailId,jdbcType=INTEGER},
      </if>
      <if test="orderDate != null">
        order_date = #{orderDate,jdbcType=DATE},
      </if>
      <if test="orderPrice != null">
        order_price = #{orderPrice,jdbcType=DECIMAL},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="leaseTerm != null">
        lease_term = #{leaseTerm,jdbcType=DATE},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
    </set>
    where order_id = #{orderId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.entity.OrderInfo">
    update order_info
    set amount = #{amount,jdbcType=INTEGER},
      delivery = #{delivery,jdbcType=VARCHAR},
      goods_detail_id = #{goodsDetailId,jdbcType=INTEGER},
      order_date = #{orderDate,jdbcType=DATE},
      order_price = #{orderPrice,jdbcType=DECIMAL},
      status = #{status,jdbcType=INTEGER},
      lease_term = #{leaseTerm,jdbcType=DATE},
      user_id = #{userId,jdbcType=INTEGER}
    where order_id = #{orderId,jdbcType=INTEGER}
  </update>
</mapper>